import logging

from aiogram import F
from aiogram.types import Message
from dispatcher import dp
from handlers.keyboard import board
from utils import *

logging.basicConfig(level=logging.INFO)

@dp.message(F.text)
async def trigger(msg: Message):
    query = msg.text.strip()

    if not (is_valid_ip(query) or is_valid_domain(query)):
        return await msg.answer(
            "<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π IP –∞–¥—Ä–µ—Å –∏–ª–∏ –¥–æ–º–µ–Ω.</b>"
        )

    info = get_ip_info(query)
    emoji = get_emoji(info.get("countryCode"))

    if info:
        domain = info.get("reverse", "N/A")
        ip = info.get("query", "N/A")
        response = (
            f"<b>üåç IP:</b> <code>{info.get('query', 'N/A')}</code>\n"
            f"<b>‚îú Provider:</b> <code>{info.get('isp', 'N/A')}</code>\n"
            f"<b>‚îú Country:</b> {emoji} {info.get('country', 'N/A')}, {info.get('countryCode', 'N/A')}\n"
            f"<b>‚îú Region:</b> {info.get('regionName', 'N/A')}, {info.get('region', 'N/A')}\n"
            f"<b>‚îú City:</b> {info.get('city', 'N/A')}\n"
            f"<b>‚îú Domain:</b> <code>{domain if domain else ip}</code>\n"
            f"<b>‚îú Mobile:</b> {info.get('mobile', 'N/A')}\n"
            f"<b>‚îú Proxy:</b> {info.get('proxy', 'N/A')}\n"
            f"<b>‚îú Hosting:</b> {info.get('hosting', 'N/A')}"
        )
    else:
        response = "<b>–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ IP –∞–¥—Ä–µ—Å–∞ –∏–ª–∏ –¥–æ–º–µ–Ω–∞.</b>"

    await msg.reply(response, reply_markup=board)
